<div id="accountInfo" class="accountInfoOverlay">
  
  <div class="userCardBundle">
    <!--Top Card -->
    <div class="row">
      <div class="col s12 m12 l8 push-l2">
        <div class="card small">
          <div class="card-image">
            <img src="/api/media/background/{{user.id}}.svg">
          </div>
          <div class="card-content">
            <div class="card-avatar">
              <img src="/api/media/avatar/{{user.id}}/100.svg" alt="Avatar" id="userCardBundleAvatar" class="card-avatar circle responsive-img">
            </div>
            <br>
            <span class="card-title black-text center">Salutation. FirstName LastName <i class="material-icons" title="User has verified their email">verified_user</i><i class="material-icons" title="User is archived">archive</i></span>
          </div>
        </div>
      </div>
    </div>
    <!--Universal Info -->
    <div class="row">
      <div class="col s12 m12 l4 push-l2">
        <div class="card">
          <div class="card-content">
           <span class="card-title">Universal Info</span>
             <span title="Account ID"><i class="material-icons">assignment_ind</i> <strong>4564651asd654f56ds4564</strong></span>
             <br><br>
             <span><i class="material-icons">email</i> <strong>josephh2018@gmail.com</strong></span>
          </div>
        </div>
      </div>

      <!--Current Location Info -->
      <!--<div class="col s12 m12 l4 push-l2">

        <div class="card">
          <div class="card-content">
           <span class="card-title">Current Location</span>

             <table class="highlight">
              <thead>
                <tr>
                  <th><i class="material-icons left">insert_photo</i></th>
                  <th><i class="material-icons">receipt</i>Pass</a></th>
                  <th><i class="material-icons">receipt</i>Pass</a></th>
                  <th><i class="material-icons">receipt</i>Pass</a></th>
                  <th><i class="material-icons">today</i>Schedule</a></th>
                </tr>
              </thead>
              <tbody>
                <tr title="Room Number">
                  <td><i class="material-icons left">room</i></td>
                  <td>123456</td>
                  <td>123456</td>
                  <td>123456</td>
                  <td>123456</td>
                </tr>
                <tr title="Person With">
                  <td><i class="material-icons left">person_pin_circle</i></td>
                  <td>Mr. Camron Thomas</td>
                  <td>Mr. Camron Thomas</td>
                  <td>Mr. Camron Thomas</td>
                  <td>Ms. Jinnafer Humtidinkle</td>
                </tr>
                <tr title="Class">
                  <td><i class="material-icons left">class</i></td>
                  <td>English</td>
                  <td>English</td>
                  <td>English</td>
                  <td>Study Hall</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>

        <div class="card">
          <div class="card-content">
           <span class="card-title">Current Location</span>
             
          </div>
        </div>
      </div>-->

    </div>
    <!--Current Location Info -->
    <div class="row">
      
      <div class="col s12 m12 l8 push-l2">

        <div class="card">
          <div class="card-content">
           <span class="card-title">Current Location</span>

             <table class="highlight">
              <thead>
                <tr>
                  <th><i class="material-icons left">insert_photo</i></th>
                  <th><i class="material-icons">receipt</i>Pass</a></th>
                  <th><i class="material-icons">receipt</i>Pass</a></th>
                  <th><i class="material-icons">receipt</i>Pass</a></th>
                  <th><i class="material-icons">today</i>Schedule</a></th>
                </tr>
              </thead>
              <tbody>
                <tr title="Room Number">
                  <td><i class="material-icons left">room</i></td>
                  <td>123456</td>
                  <td>123456</td>
                  <td>123456</td>
                  <td>123456</td>
                </tr>
                <tr title="Person With">
                  <td><i class="material-icons left">person_pin_circle</i></td>
                  <td>Mr. Camron Thomas</td>
                  <td>Mr. Camron Thomas</td>
                  <td>Mr. Camron Thomas</td>
                  <td>Ms. Jinnafer Humtidinkle</td>
                </tr>
                <tr title="Class">
                  <td><i class="material-icons left">class</i></td>
                  <td>English</td>
                  <td>English</td>
                  <td>English</td>
                  <td>Study Hall</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
    <div class="row" >
      <div class="col s12 m12 l8 push-l2">
      <div class="card">
          <div class="card-content">
          <span class="card-title">Schedules</span>
            <p>I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.</p>
          </div>
          <div class="card-tabs">
            <ul class="tabs tabs-fixed-width">
              <li class="tab"><a href="#test4">Student Type Schedule</a></li>
              <li class="tab"><a class="active" href="#test5">Teacher Type Schedule</a></li>
            </ul>
          </div>
          <div class="card-content grey lighten-4">
            <div id="test4">
              <table class="highlight responsive-table">
                <thead>
                  <tr>
                      <th>Period</th>
                      <th>Class</th>
                      <th>Teacher</th>
                      <th>Room</th>
                  </tr>
                </thead>

                <tbody>
                  <tr>
                    <td>A</td>
                    <td>Algebra</td>
                    <td>Ms. Humptydinkle</td>
                    <td>123456</td>
                  </tr>
                  <tr>
                    <td>A</td>
                    <td>Algebra</td>
                    <td>Ms. Humptydinkle</td>
                    <td>123456</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="test5">
              <table class="highlight responsive-table">
                <thead>
                  <tr>
                      <th>Period</th>
                      <th>Class</th>
                      <th>Limit</th>
                      <th>Room</th>
                  </tr>
                </thead>

                <tbody>
                  <tr>
                    <td>A</td>
                    <td>Algebra</td>
                    <td>3</td>
                    <td>123456</td>
                  </tr>
                  <tr>
                    <td>B</td>
                    <td>Algebra</td>
                    <td>3</td>
                    <td>123456</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

  </div>
</div>


<script type="text/javascript">
  /*
  let accountOverlay = {};
  accountOverlay._compile = {};

  accountOverlay.new = function(id) {
    
  }

  //Private
  accountOverlay._compile.topCard = function(nameJson, )
  */



  let AccountOverlay = (function() {
    let _userID = new WeakMap();
    let _user = new WeakMap();
    let _userSchedule = new WeakMap();
    let _location = new WeakMap();
    let _accountLoaded = new WeakMap();
    class AccountOverlay {
      constructor(userID, loadedCallback) {
        _userID.set(this, userID);
        console.log(this)
        this.loadData().catch(function(err) {
          if(err) {
            loadedCallback(err);
          } else {
            loadedCallback(null)
          }
        })
      };

      get user() {
        return _user.get(this);
      };
      loadData() {
        var promise = new Promise(function(resolve, reject) {
          var prom = [];
          prom.push(this.loadUser());
          prom.push(this.loadLocation("2017-09-07T10:55:30.652-05:00"));
          prom.push(this.loadSchedule());
  //2017-09-07T10:55:30.652-05:00
  //" + new Date().toISOString() + "
          Promise.all(prom).then(function(data) {
            _user.set(this, data[0]);
            _location.set(this, data[1]);
            _userSchedule.set(this, data[2])
            resolve(data)
          }.bind(this)).catch(function(err) {
            
            reject(err)
          })
        }.bind(this));
        _accountLoaded.set(this, promise);
        return promise;
      }
      loadUser() {
        return new Promise(function(resolve, reject) {
          $.ajax({
            type: "get",
            url: "/api/account/id/" + _userID.get(this) + "/",
            dataType: "json",
            beforeSend: function(xhr){xhr.setRequestHeader('X-XSRF-TOKEN', getCookie("XSRF-TOKEN"));},
            success: function(data) {resolve(data)}.bind(this),
            error: function(jqXHR) {reject(jqXHR)}                      
          });
        }.bind(this))
      }
      loadLocation(dateTime) {
        return new Promise(function(resolve, reject) {
          $.ajax({
            type: "get",
            url: "/api/account/location/datetime/" + dateTime + "/id/" + _userID.get(this) + "/",
            dataType: "json",
            beforeSend: function(xhr){xhr.setRequestHeader('X-XSRF-TOKEN', getCookie("XSRF-TOKEN"));},
            success: function(data) {resolve(data)}.bind(this),
            error: function(jqXHR) {reject(jqXHR)}                      
          });
        }.bind(this))
      }
      loadSchedule() {
        return new Promise(function(resolve, reject) {
          $.ajax({
            type: "get",
            url: "/api/account/schedule/id/" + _userID.get(this) + "/",
            dataType: "json",
            beforeSend: function(xhr){xhr.setRequestHeader('X-XSRF-TOKEN', getCookie("XSRF-TOKEN"));},
            success: function(data) {resolve(data)}.bind(this),
            error: function(jqXHR) {reject(jqXHR)}                      
          });
        }.bind(this))
      }
      topCard() {
        var top = $("<div/>").addClass("col s12 m12 l8 push-l2");

        var image = $("<div/>")
                      .addClass("card-image")
                      .append(
                        $("<img/>")
                          .attr("src", "/api/media/background/" + _user.get(this).id + ".svg")
                      )
        
        var cont = $("<div/>")
                      .addClass("card-content")
                      .append(
                        $("<div/>")
                          .addClass("card-avatar")
                          .append(
                            $("<img/>")
                              .addClass("card-avatar circle responsive-img")
                              .attr("alt", "Avatar")
                              .attr("src", "/api/media/avatar/" + _user.get(this).id + "/100.svg")
                          )
                      ).append(
                        $("<br/>")
                      )
        var nameThing = $("<span/>")
                        .addClass("card-title black-text center")
                        .html(_user.get(this).name.salutation + " " + _user.get(this).name.first + " " + _user.get(this).name.last)
        
        if(_user.get(this).isVerified) {
          nameThing.append(" ").append(
                $("<i/>").addClass("material-icons").attr("title", "User has verified their email").html("verified_user")
            )
        }

        if(_user.get(this).isArchived) {
          nameThing.append(" ").append(
                $("<i/>").addClass("material-icons").attr("title", "User is archived").html("archive")
            )
        }

        return top.append($("<div/>").addClass("card small")
                  .append(image)
                  .append(cont.append(nameThing))
                )
      }

      universalInfoCard() {
        var top = $("<div/>").addClass("col s12 m12 l4 push-l2");
        var id = $("<span/>")
                        .attr("title", "Account ID") 
                        .prepend($("<i/>").addClass("material-icons").html("assignment_ind"))
                        .append(" ")
                        .append($("<strong/>").html(_user.get(this).id))
        var email = $("<span/>")
                        .attr("title", "Email") 
                        .prepend($("<i/>").addClass("material-icons").html("email"))
                        .append(" ")
                        .append($("<strong/>").html(_user.get(this).email))
        var accountType = $("<span/>")
                        .attr("title", "User Group/Account Type") 
                        .prepend($("<i/>").addClass("material-icons").html("security"))
                        .append(" ")
                        .append($("<strong/>").html(_user.get(this).userGroup))

        var cont = $("<div/>")
                      .addClass("card-content")
                      .append($("<span/>").addClass("card-title").html("Universal Info"))
                      .append(id)
                      .append($("<br/>"))
                      .append($("<br/>"))
                      .append(email)
                      .append($("<br/>"))
                      .append($("<br/>"))
                      .append(accountType)

        return top.append($("<div/>").addClass("card")
            .append(cont)
          )
      }
      /*
      <tr>
                  <th><i class="material-icons left">insert_photo</i></th>
                  <th><i class="material-icons">receipt</i>Pass</a></th>
                  <th><i class="material-icons">today</i>Schedule</a></th>
                </tr>
                */
      currentLocationCard() {
        var top = $("<div/>").addClass("col s12 m12 l4 push-l2");

        var tHead = $("<thead/>").append($("<tr/>")
                      .append($("<th/>").append($("<i/>").addClass("material-icons").html("insert_photo")))
                      .append($("<th/>").html("Pass").prepend($("<i/>").addClass("material-icons").html("receipt")))
                      .append($("<th/>").html("Schedule").prepend($("<i/>").addClass("material-icons").html("today")))
        );

        //var tBody = 

        var cont = $("<div/>")
                      .addClass("card-content")
                      .append($("<span/>").addClass("card-title").html("Current Location"))
                      .append($("<table/>").addClass("highlight").append(tHead).append("Coming Soon"))


      return top.append($("<div/>").addClass("card")
            .append(cont)
          )

      }

      scheduleCard() {
        var top = $("<div/>").addClass("col s12 m12 l8 push-l2");

        var cont = $("<div/>").addClass("card-content").append($("<span/>").addClass("card-title").html("Schedules"));

        var teacherTable = null;
        var studentTable = null;

        if(_userSchedule.get(this).studentType) {
          //student type schedule table element
          var sTableHead = $("<thead/>").append($("<tr/>")
              .append($("<th/>").html("Period"))
              .append($("<th/>").html("Class"))
              .append($("<th/>").html("Teacher"))
              .append($("<th/>").html("Room"))
            )
          var studentSchedule = _userSchedule.get(this).studentType.schedule;
          var studentScheduleKeys = Object.keys(studentSchedule);
          var sTableBody = $("<tbody/>");
          for(var s = 0; s < studentScheduleKeys.length; s++) {
            
            if(studentSchedule[studentScheduleKeys[s]]) {
              var sTR = sTableBody.append($("<tr/>"));
                sTR.append($("<td/>").html(studentScheduleKeys[s].toUpperCase()))

                if(studentSchedule[studentScheduleKeys[s]].className) {
                  sTR.append($("<td/>").html(studentSchedule[studentScheduleKeys[s]].className))
                } else {
                  sTR.append($("<td/>").html(" "))
                }
                if(studentSchedule[studentScheduleKeys[s]].teacher) {
                  sTR.append($("<td/>").html(studentSchedule[studentScheduleKeys[s]].teacher.name.salutation + " " + studentSchedule[studentScheduleKeys[s]].teacher.name.first + " " + studentSchedule[studentScheduleKeys[s]].teacher.name.last))
                } else {
                  sTR.append($("<td/>").html(" "))
                }
                if(studentSchedule[studentScheduleKeys[s]].room) {
                  sTR.append($("<td/>").html(studentSchedule[studentScheduleKeys[s]].room))
                } else {
                  sTR.append($("<td/>").html(" "))
                }
                
            }
          } 
          studentTable = $("<table/>").addClass("highlight responsive-table").prepend(sTableHead).append(sTableBody);
        }
        if(_userSchedule.get(this).teacherType) {
          //student type schedule table element
          var tTableHead = $("<thead/>").append($("<tr/>")
              .append($("<th/>").html("Period"))
              .append($("<th/>").html("Class"))
              .append($("<th/>").html("Limit"))
              .append($("<th/>").html("Room"))
            )
          var teacherSchedule = _userSchedule.get(this).teacherType.schedule;
          var teacherScheduleKeys = Object.keys(teacherSchedule);
          var tTableBody = $("<tbody/>");
          for(var s = 0; s < teacherScheduleKeys.length; s++) {
           
            if(teacherSchedule[teacherScheduleKeys[s]]) {
              var sTR = tTableBody.append($("<tr/>"));
                sTR.append($("<td/>").html(teacherScheduleKeys[s].toUpperCase()))

                if(teacherSchedule[teacherScheduleKeys[s]].className) {
                  sTR.append($("<td/>").html(teacherSchedule[teacherScheduleKeys[s]].className))
                } else {
                  sTR.append($("<td/>").html("No Class"))
                }
                if(teacherSchedule[teacherScheduleKeys[s]].limit) {
                  sTR.append($("<td/>").html(teacherSchedule[teacherScheduleKeys[s]].limit))
                } else {
                  sTR.append($("<td/>").html("No Limit Set"))
                }
                if(teacherSchedule[teacherScheduleKeys[s]].room) {
                  sTR.append($("<td/>").html(teacherSchedule[teacherScheduleKeys[s]].room))
                } else {
                  sTR.append($("<td/>").html(" "))
                }
                
            }
          } 
          teacherTable = $("<table/>").addClass("highlight responsive-table").prepend(tTableHead).append(tTableBody);
        }
        if(studentTable && teacherTable) {
          //Convert to tabbed card
          var tabUUids = this._uuidv4();
          var tabDef = $("<div/>").addClass("card-tabs").append($("<ul/>").addClass("tabs tabs-fixed-width")
              .append($("<li/>").addClass("tab").append($("<a/>").attr("href", "#studentType"+tabUUids).html("Student Type Schedule")))
              .append($("<li/>").addClass("tab").append($("<a/>").attr("href", "#teacherType"+tabUUids).html("Teacher Type Schedule")))
            )
          var tabSwitch = $("<div/>").addClass("card-content grey lighten-4").append($("<div/>").attr("id", "studentType"+tabUUids).append(studentTable)).append($("<div/>").attr("id", "teacherType"+tabUUids).append(teacherTable))
          return top.append($("<div/>").addClass("card")
            .append(cont)
            .append(tabDef)
            .append(tabSwitch)
          )
        } else {
          return top.append($("<div/>").addClass("card")
            .append(cont.append(studentTable || teacherTable))
          )
        }

        
      }
      /*
      <div class="col s12 m12 l8 push-l2">
      <div class="card">
          <div class="card-content">
          <span class="card-title">Schedules</span>
            <p>I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.</p>
          </div>
          <div class="card-tabs">
            <ul class="tabs tabs-fixed-width">
              <li class="tab"><a href="#test4">Student Type Schedule</a></li>
              <li class="tab"><a class="active" href="#test5">Teacher Type Schedule</a></li>
            </ul>
          </div>
          <div class="card-content grey lighten-4">
            <div id="test4">
              <table class="highlight responsive-table">
                <thead>
                  <tr>
                      <th>Period</th>
                      <th>Class</th>
                      <th>Teacher</th>
                      <th>Room</th>
                  </tr>
                </thead>

                <tbody>
                  <tr>
                    <td>A</td>
                    <td>Algebra</td>
                    <td>Ms. Humptydinkle</td>
                    <td>123456</td>
                  </tr>
                  <tr>
                    <td>A</td>
                    <td>Algebra</td>
                    <td>Ms. Humptydinkle</td>
                    <td>123456</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="test5">
              <table class="highlight responsive-table">
                <thead>
                  <tr>
                      <th>Period</th>
                      <th>Class</th>
                      <th>Limit</th>
                      <th>Room</th>
                  </tr>
                </thead>

                <tbody>
                  <tr>
                    <td>A</td>
                    <td>Algebra</td>
                    <td>3</td>
                    <td>123456</td>
                  </tr>
                  <tr>
                    <td>B</td>
                    <td>Algebra</td>
                    <td>3</td>
                    <td>123456</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
      */
      generateOverlay(id, active, ignoreLoaded) {

        console.log("trig")
        if(ignoreLoaded) {
          gen.call(this);
        } else {
          _accountLoaded.get(this).then(function() {
            gen.call(this);
          }.bind(this))
        }
        function gen() {
          if($("#"+id).length > 0) {
            this.deleteOverlay(id)
          }
          
          
          $("body").prepend($("<div/>").attr("id", id).addClass("accountInfoOverlay").prepend(
            $("<div/>").addClass("userCardBundle").append($("<div/>").addClass("row").append(this.topCard()))
              .append($("<div/>").addClass("row")
                .append(this.universalInfoCard())
                .append(this.currentLocationCard())
                
            ).append($("<div/>").addClass("row").append(this.scheduleCard()))
          ));
          $('ul.tabs').tabs();
          window.requestAnimationFrame(function() {
            if(active) {
              $("#"+id).addClass("active")
            }
          })
          
          
          $(window).click(function() {
            this.closeOverlay(id)
            
          }.bind(this));
          $("#"+id+" .userCardBundle").click(function(event){
            event.stopPropagation();
          });
        };
      }
      closeOverlay(id) {
        $("#"+id).removeClass("active")
        
      }
      deleteOverlay(id) {
        $("#"+id).remove();
      }
      openOverlay(id) {
        $("#"+id).addClass("active")
      }

      _uuidv4() {
        return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>
          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
        )
      }

    };
    return AccountOverlay;
 }());

  
</script>