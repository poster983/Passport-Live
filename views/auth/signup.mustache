{{>head}}
<!--
Passport-Live is a modern web app for schools that helps them manage passes.
    Copyright (C) 2017  Joseph Hassell

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

email: hi@josephhassell.com
-->

    <body class="blur-back">
        <div class="containerlogin signup-allign">

            <div class="card-panel animated fadeInDown">
                <h3 class="center">Signup For Passport</h3>
                <div class="card-panel">
                    <div class="row">
                        <div class="input-field col s12">
                            <select id="accountType" class="validate invalid" onchange="setEmailRules(this); checkIfGraduates(this);">
                              <option value="" disabled selected>Choose your account type</option>
                            </select>
                            <label>Account Type</label>
                        </div>
                        <div class="col s12 input-field">
                             <input type="text" id="salutation" class="autocomplete validate">
                              <label for="salutation">Salutation</label>
                        </div>
                         <div class="col s12 m6 input-field">
                                <input type="text" required id="firstname" autocomplete="off" class="validate" name="firstName">
                                <label for="firstname">First Name</label>
                        </div>
                        <div class="col s12 m6 input-field">
                                <input type="text" required id="lastname" autocomplete="off" class="validate" name="lastName">
                                <label for="lastname">Last Name</label>
                        </div>
                        <div class="col s12 input-field">
                            <input name="email" type="email" class="validate" id="email">
                            <label for="email">Email</label>
                        </div>
                        <div class="col s12 input-field">
                            <input name="schoolID" type="text" class="tooltipped" data-tooltip="Leave this blank if you don't have one" data-position="bottom" id="schoolID">
                            <label for="schoolID">School ID</label>
                        </div>
                        <div class="col s12 input-field">
                            <input name="password" type="password" class="validate" id="password">
                            <label for="password">Password</label>
                        </div>
                        <div class="col s12 input-field">
                            <input name="passwordVerification" type="password" class="validate" id="passwordVer">
                            <label for="passwordVer">Password (Again)</label>
                        </div>
                        <br>
                        <div class="col s12 input-field" id="gradYearCon" style="display:none;">
                            <select id="gradYear" class="validate">
                                <option value="" disabled selected>Choose a Year</option>
                            </select>
                            <label>Graduation Year</label>
                        </div>
                    </div>
                    <button class="btn waves-effect waves-light red darken-4 pulse" onclick="signup();">Signup
                        <i class="material-icons right">lock_open</i>
                    </button>
    								
                			{{#message}}
    						<h6> {{message}} </h6>
    						{{/message}}
                </div>
            </div>
        </div>
    <script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
    <script src="/js/materialize.js"></script>
	<script src="/js/passport.js"></script>

    <script type="text/javascript">
    var userGroupsData = null;
    $(document).ready(function() {
         $('.datepicker').pickadate({
            selectMonths: false,
            selectYears: 5, 
            today: null,
            clear: 'Clear',
            close: 'Ok',
            closeOnSelect: false // Close upon selecting a date,
          });
        
         $('input.autocomplete').autocomplete({
            data: {
              "Mr.": null,
              "Ms.": null,
              "Mrs.": null,
              "Miss.": null,
              "Mx.": null,
              "Fr.": null,
              "Dr.": null,
              "Prof.": null,
              "Pr.": null,
              "Br.": null,
              "Sr.": null,
              "Srta.": null
            },
            limit: 20, // The max amount of results that can be shown at once. Default: Infinity.
            onAutocomplete: function(val) {
              // Callback function when value is autcompleted.
            },
            minLength: 1, // The minimum length of the input for the autocomplete to start. Default: 1.
          });
         $('select').material_select();
        
        getUserGroups(function(err, data) {
            if(err) {
                return errorHand(err);
            }
            userGroupsData = data;
            setupPermKeys();
        })
    })

    function getUserGroups(done) {
        $.ajax({
                type: "get",
                url: "/api/server/config/userGroups",
                success: function(data) {
                    return done(null, data);
                },
                error: function(jqXHR) {    
                    return done(jqXHR);
                }                      
            });
    }

    function setEmailRules(dis) {
        //email
        var sel = $(dis).val();
        var domains = userGroupsData[sel].permissions.allowedEmailDomains;
        var str = "";
        if(domains && domains.length > 0) {
            str = "Can only sign up with a ";
            for(var i = 0; i < domains.length; i++ ) {
                str = str + domains[i];
                if(i >= domains.length -1) {
                    str = str + " domain";
                    $("#email").attr("data-tooltip", str).attr("data-position", "bottom").addClass("tooltipped");
                    $('.tooltipped').tooltip({delay: 50});
                    console.log(str)
                } else {
                    str = str + " or a ";
                }
            }
        }
    }
    var doesGraduate = null;
    function checkIfGraduates(dis) {
        $("#gradYear").empty().prepend($("<option value='' disabled selected>Choose a Year</option>"));
        $('select').material_select();
        doesGraduate = userGroupsData[$(dis).val()].graduates;
        if(userGroupsData[$(dis).val()].graduates) {
            var year = new Date().getFullYear();
            for(var x = 0; x < 5; x++) {
                $("#gradYear").append($("<option/>").val(year+x).html(year+x))
            }
            $('select').material_select();
            $("#gradYearCon").slideDown();

            console.log("Graduates")
        } else {
            $("#gradYearCon").slideUp();
        }
    }

    function setupPermKeys() {
        var pk = getUrlParameter("pk");
        if(pk) {
            $.ajax({
                type: "get",
                url: "/api/security/key/NEW_ACCOUNT",
                data: {key: pk},
                success: function(data) {
                    console.log(data)
                    if(data && data.permissions && data.permissions.userGroups) {
                        for(var i = 0; i < data.permissions.userGroups.length; i++) {
                            console.log(data)
                            $("#accountType").append($("<option/>")
                                                        .attr("value", data.permissions.userGroups[i])
                                                        .html(data.permissions.userGroups[i].charAt(0).toUpperCase() + data.permissions.userGroups[i].slice(1)));
                            if(i >= data.permissions.userGroups.length -1) {
                                $('select').material_select();
                            }
                        }
                    }
                },
                error: function(jqXHR) {    
                    return errorHand(jqXHR)
                }                      
            });
        } else {

            /*$.ajax({
                type: "get",
                url: "/api/server/config/userGroups",
                success: function(data) {
                    console.log(data)
                    for (var key in data) {
                        if (data.hasOwnProperty(key) && data[key].verifyAccountCreation == false) {
                             $("#accountType").append($("<option/>")
                                                        .attr("value", key)
                                                        .html(key.charAt(0).toUpperCase() + key.slice(1)));
                             $('select').material_select();
                        }
                    }
                },
                error: function(jqXHR) {    
                    return errorHand(jqXHR)
                }                      
            });*/

            for (var key in userGroupsData) {
                if (userGroupsData.hasOwnProperty(key) && userGroupsData[key].verifyAccountCreation == false) {
                     $("#accountType").append($("<option/>")
                                                .attr("value", key)
                                                .html(key.charAt(0).toUpperCase() + key.slice(1)));
                     $('select').material_select();
                }
            }
        }
    }
        function signup() {
            var accountType = $("#accountType").val();
            var salutation = $("#salutation").val();
            var firstname = $("#firstname").val();
            var lastname = $("#lastname").val();
            var email = $("#email").val();
            var passwordVerification = $("#passwordVer").val();
            var password = $("#password").val();
            var gradYear = $("#gradYear").val();
            var schoolID = $("#schoolID").val();
            console.log(schoolID)
            var errored = false;
            console.log(accountType)
            if(!accountType) {
                $("#accountType").removeClass("valid").addClass("invalid")
                Materialize.toast("Please spesify an account type", 4000)
                errored = true;
            }
            if(!salutation) {
                $("#salutation").removeClass("valid").addClass("invalid")
                errored = true;
            }
            if(!firstname) {
                $("#firstname").removeClass("valid").addClass("invalid")
                errored = true;
            }
            if(!lastname) {
                $("#lastname").removeClass("valid").addClass("invalid")
                errored = true;
            }
            if(!email) {
                $("#email").removeClass("valid").addClass("invalid")
                errored = true;
            }
            if(!passwordVerification) {
                $("#passwordVer").removeClass("valid").addClass("invalid")
                errored = true;
            }
            if(!password) {
                $("#password").removeClass("valid").addClass("invalid")
                errored = true;
            }
            if(password != passwordVerification) {
                $("#password").removeClass("valid").addClass("invalid")
                $("#passwordVer").removeClass("valid").addClass("invalid")
                Materialize.toast("Passwords must match", 4000)
                errored = true;
            }
            if(!gradYear) {
                if(doesGraduate) {
                    $("#gradYear").removeClass("valid").addClass("invalid");
                    Materialize.toast("You must specify your graduation year.", 4000)
                    errored = true;
                } else {
                    gradYear = null;
                }
                
            }
            if(!schoolID) {
                schoolID = null;
            }
            var sData = {graduationYear: gradYear, schoolID: schoolID, email: email, password: password, passwordVerification: passwordVerification, name:{first: firstname, last: lastname, salutation: salutation}};
            var pk = getUrlParameter("pk");
            if(pk) {
                sData.permissionKey = pk;
            }
            if(!errored) {
                $.ajax({
                    type: "post",
                    url: "/api/account/new/" + accountType,
                    data: sData,
                    success: function(data) {

                        materialResponse("check", "success", function() {
                            window.location.href = "/auth/login?msgHead="+encodeURIComponent("Account created")+"&msg="+encodeURIComponent("Your should recieve an activation email soon. Please remember to check your spam");
                        })
                    },
                    error: function(jqXHR) {
                        errorHand(jqXHR)
                    }                      
                  });
            }
        }
        //handle submit
        $('body').keypress(function (e) {
          if (e.which == 13) {
            signup();
            return false;   
          }
        });
    </script>

    </body>


    </html>