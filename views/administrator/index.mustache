{{>head}}
<!--
Passport-Live is a modern web app for schools that helps them manage passes.
    Copyright (C) 2017  Joseph Hassell

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

email: hi@josephhassell.com
-->

<body class="grey darken-4">

    {{>mixens/accountOverlay}}
    
    <nav>
      <div class="nav-wrapper">
       
        <a href="#!" class="right brand-logo">Administrators</a>
         <ul id="slide-out" class="side-nav">
          <li><div class="user-view">
            <div class="background">
              <img src="/images/stunav.jpg">
            </div>
             <a href="#!user"><img src="/api/media/avatar/{{user.id}}/100.svg" alt="" class="passport-avatar circle responsive-img"></a>
            <a href="#!name"><span class="white-text name">{{user.name.first}} {{user.name.last}}</span></a>
            <a href="#!email"><span class="white-text email">{{user.email}}</span></a>
          </div></li>
          <li><a href="#!"><i class="material-icons">cloud</i>First Link With Icon</a></li>
          <li><a href="#!">Second Link</a></li>
          <li><div class="divider"></div></li>
          <li><a class="subheader">Subheader</a></li>
          <li><a class="waves-effect" href="#!">Third Link With Waves</a></li>
        </ul>
        <a href="#" data-activates="slide-out" class="nav-sandwich button-collapse left-allign show-on-large"><i class="material-icons">menu</i></a>
      </div>
    </nav>
    <nav>
      <div class="nav-wrapper">
        <form>
          <div class="input-field">
            <input id="search" type="search" required>
            <label class="label-icon" for="search"><i class="material-icons">search</i></label>
            <i class="material-icons">close</i>
          </div>
        </form>
      </div>
    </nav>

    <!-- Side Nav-->
   

     <div class="fixed-action-btn">
      <a  class="btn-floating btn-large waves-effect waves-light">
        <i class="large material-icons">mode_edit</i>
      </a>
      <ul>
        <li><a onclick="se.openPage();" class="btn-floating red tooltipped" data-position="left" data-delay="50" data-tooltip="New Schedule"><i class="material-icons">add</i></a></li>
        <li><a onclick="openPage('recurringEditor'); re.setup();" class="btn-floating blue tooltipped" data-position="left" data-delay="50" data-tooltip="Set Repeating Schedule"><i class="material-icons">today</i></a></li>
      </ul>
    </div>

    <div id="mainCards" class="container" style="display: none;">
      <div id="cal"> 
        <div class="row">
          <div class="col s12">
            <div class="card">
              <div class="card-content">
                <span class="card-title">Schedules</span>
                <input id="ScheduleDate" type="date" class="datepicker">
                <label for="ScheduleDate">View Date</label>
                <p>I am a very simple card. I am good at containing small bits of information.
                I am convenient because I require little markup to use effectively.</p>
              </div>
              <div class="card-action">
                <a href="#">Edit Current Schedule</a>
                <a href="#">Temporarily Change To A New Schedule</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div id="searchCards" class="container">
      <div class="row">
        <div class="col s12">
          <div class="card grey darken-3">
            <div class="card-content">
              <span class="card-title white-text">Account Search</span>
              <ul class="collection" id="accountSearchReturn">
                <li class="collection-item avatar">
                  <img src="/api/media/avatar/febffe69-0185-46ac-a005-09c1c6de154f/50.svg" alt="avatar" class="passport-avatar circle">
                  <span class="title">Mr. Joseph Hassell</span>
                  <p>Email: <strong>josephh2018@gmail.com</strong></p>
                  <p title="User Group">Account Type: <strong>Student</strong></p>
                  <a class="secondary-content btn-floating waves-effect waves-circle waves-light"><i class="material-icons">account_circle</i></a>
                  
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
            
    </div>



    <div id="mustacheMixens">
      <div class="mustacheMixen page" id="scheduleEditor"> 
        {{>administrator/mixinScheduler}}
      </div>
      <div class="mustacheMixen page" id="recurringEditor"> 
        {{>administrator/mixinRecurring}}
      </div>
    </div>
    <!-- Scripts -->
        <!--[if lte IE 8]><script src="assets/js/respond.min.js"></script><![endif]-->
        <script>
            if ('addEventListener' in window) {
                window.addEventListener('load', function () {
                    document.body.className = document.body.className.replace(/\bis-loading\b/, '');
                });
                document.body.className += (navigator.userAgent.match(/(MSIE|rv:11\.0)/) ? ' is-ie' : '');
            }
        </script>
        <script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>

        <!-- Compiled and minified JavaScript -->
        <script src="/js/materialize.js"></script>
        <script src="/js/passport.js"></script>
        <script src="/moment/min/moment-with-locales.min.js"></script>
        <script>
          $(document).ready(function(){
            $(".button-collapse").sideNav();
            $('.datepicker').pickadate({
              selectMonths: true, // Creates a dropdown to control month
              selectYears: 15 // Creates a dropdown of 15 years to control year
            });
            $('.timepicker').pickatime({
              default: 'now', // Set default time
              fromnow: 0,       // set default time to * milliseconds from now (using with default = 'now')
              twelvehour: true, // Use AM/PM or 24-hour format
              donetext: 'OK', // text for done-button
              cleartext: 'Clear', // text for clear-button
              canceltext: 'Cancel', // Text for cancel-button
              autoclose: false, // automatic close timepicker
              ampmclickable: true, // make AM PM clickable
              aftershow: function(){} //Function for after opening timepicker  
            });
            $('select').material_select();
          });

          /*$(window).on("popstate", function (event, state) {
             console.log(event);
             console.log(state);
          });*/
          //change for mixen
          let SearchUserCard = (function() {
            let _query = new WeakMap();
            class SearchUserCard {
              constructor(inputID) {
                
              }
              get query() {
                return _query.get(this); 
              }
              _ajaxQuery(name, time) {
                return new Promise(function(resolve, reject) {
                  $.ajax({
                    type: "get",
                    url: "/api/account/location/datetime/2017-09-07T10:55:30.652-05:00/id/" + userID + "/",
                    dataType: "json",
                    beforeSend: function(xhr){xhr.setRequestHeader('X-XSRF-TOKEN', getCookie("XSRF-TOKEN"));},
                    success: function(data) {resolve(data)}.bind(this),
                    error: function(jqXHR) {reject(jqXHR)}                      
                  });
                }.bind(this));
              }
              query(name, time) {
                this._ajaxQuery(name, time).then(function(data) {
                  _query.set(this, data); 
                }.bind(this)) 
              }
              toCard() {
                return "card";
              }
            };
            return SearchUserCard;
          }());
          
          var accountOverlay = new AccountOverlay("797fe81b-cf0a-448b-8782-6e35b711e535", function(err) {
            if(err) {
              return errorHand(err);
            }
            accountOverlay.generateOverlay("overlay" + "797fe81b-cf0a-448b-8782-6e35b711e535", true)
          });
        </script>
</body>
</html>