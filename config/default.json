//NEEDS DOCUMENTATION https://www.gitbook.com/book/poster983/passport-developer

{	
	"userGroups": { 
		"student": {
			"permissions": {
				"dashboards": ["student"], // what they can login to.  this is going to be put directly into the url that the index.js route sends the user to, so it MUST match an existing route
				"allowedEmailDomains": ["@gmail.com", "@outlook.com"] //User must signup with these domain endings OR put false if you want to allow any domain.
			},
			"verifyAccountCreation": false, //When creating an account, the user will be required to input a random key assigned by an admin.
			"graduates": true //this requires that the user have a graduation year linked to their account.
		},
		"teacher": {
			"permissions": {
				"dashboards": ["teacher"], // what they can login to.  this is going to be put directly into the url that the index.js route sends the user to, so it MUST match an existing route
				"allowedEmailDomains": false //User must signup with these domain endings OR put false if you want to allow any domain.

			},
			"passes": { //by defining "passes" this will show up in the pass groups get api
				"preferSearch": true, //tells programs via api that inorder to find the person, they must use a search.  Otherwise a select is used(if implemented)
				"viewName": "Teachers" //friendly name
			},
			"hasClasses": true, //Means that students COULD leave from their period.  
			"verifyAccountCreation": true //When creating an account, the user will be required to input a random key assigned by an admin.
		},
		"counselor": {
			"permissions": {
				"dashboards": ["teacher"], // what they can login to.  this is going to be put directly into the url that the index.js route sends the user to, so it MUST match an existing route
				"allowedEmailDomains": false //User must signup with these domain endings OR put false if you want to allow any domain.

			},
			"passes": { //by defining "passes" this will show up in the pass groups get api
				"preferSearch": false, //tells programs via api that inorder to find the person, they must use a search.  Otherwise a select is used(if implemented)
				"viewName": "Counselors" //friendly name
			},
			"hasClasses": true, //Means that students COULD leave from their period.  
			"verifyAccountCreation": true //When creating an account, the user will be required to input a random key assigned by an admin.
		},
		"administrator": {
			"permissions": {
				"dashboards": ["administrator"], // what they can login to.  this is going to be put directly into the url that the index.js route sends the user to, so it MUST match an existing route
				"allowedEmailDomains": false //User must signup with these domain endings OR put false if you want to allow any domain.

			},
			"verifyAccountCreation": true //When creating an account, the user will be required to input a random key assigned by an admin.
		},
		"admin": { //warning, don't change until you have an admin account on Passport
			"permissions": {
				"dashboards": ["student", "teacher", "kiosk", "administrator", "admin"], // what they can login to.  this is going to be put directly into the url that the index.js route sends the user to, so it MUST match an existing route

			},
			"verifyAccountCreation": true //When creating an account, the user will be required to input a random key assigned by an admin.
		},
		"dev": {
			"permissions": {
				"dashboards": ["student", "teacher", "kiosk", "administrator", "admin"] // what they can login to.  this is going to be put directly into the url that the index.js route sends the user to, so it MUST match an existing route

			},
			"verifyAccountCreation": true //When creating an account, the user will be required to input a random key assigned by an admin.
		},
	},
	"webInterface": {
		"browserSupport": {
			"supported": {  //Best Not to change
				"Chrome": 55,  //If browserVersion >= 55
				"Chromium": 55,
				"Firefox": 52,
				"Safari": 10,
				"Opera": 42,
				"Edge": 14, //EdgeHTML
				"Vivaldi": true //every version 
			},
			"blocked": { // will not let the user use any front-end page
				"IE": true, //every version is blocked
				"IEMobile": true,
				"Safari": 9 // if browserVersion <= 9
			}
		},
		"customHeadCode": "<!--PUT THINGS LIKE google analytics tracking code here -->"
		
	},
	"rethinkdb": {
		"host": "localhost",
		"port": 28015,
		"database": "passport",
		"password": "" //Dont Change.  Use local.json
	},
	"server": {
		"domain": "https://example.com", //unfortunately for things like OAuth and emails, we need the exact domain of the server passport is running on. 
		"httpPort": 3000, //set in production config file, 80 or 8080 with a redirect firewall rule
		"https": {
			"port": 3443, //set in production config file, 443
			"email": "testEmail@example.com"
		}
	},
	"schedule": { 
		//"periods": ["a", "b", "c", "d", "blockE", "e1", "blockLunch", "lunch2", "lunch1", "e2", "f", "g", "h", "flex", "m", "home"],//Constant Period names for the schedule feature.   Weird things my happen if changed during school year
		"periods": { //"." not allowed
			"a": {"name": "A"}, 
			"b": {"name": "B"},
			"c": {"name": "C"},
			"d": {"name": "D"},
			"e": {"variation": {
				"1": {"name": "E1"},
				"2": {"name": "E2"}
			}},
			"lunch": {"variation": {
				"1": {"name": "1st Lunch"},
				"2": {"name": "2nd Lunch", "variation": {
					"z": {"name": "Zst Lunch"}
				}}
			}},
			"f": {"name": "F"},
			"g": {"name": "G"},
			"h": {"name": "H"},
			"flex": {"name": "Flex"},
			"home": {"name": "Homeroom"}
		},
		"daysOfTheWeek": { //Choose what days have school
			"monday": true,
			"tuesday": true,
			"wednesday": true,
			"thursday": true,
			"friday": true,
			"saturday": false, //if you set this to "true", you are a monster
			"sunday": false
		}
	},
	"misc": {
		"storeSessionToDisc": true //set in production config file, false
	},
	"secrets": {  //DO NOT CHAnGE! CREATE A local.json FILE AND PASTE secrets INTO IT
		"api-secret-key": "123456", //for use with jwt
		"session-key": "6543210",
		"cookie-secret": "159753",
		"loggingDSN": "https://sfgdgfsdfgsdgfsdgfsdgfgfsd:sfgdfgsdgfsdfgsdgf@sentry.io/123456",
		"OAuth": {
			"google": {
				"clientID": "12345",
				"clientSecret": "123454"
			}
		}
	},
	"passwordPolicy": {  
		"minimumLength": 6,
		"maximumLength": 128,
		"regexRules": ["[a-zA-Z]", "\\d"], // Has lowercase or uppercase, and has numbers // "[a-zA-Z]", "\\d"
		"humanReadableRule": "Passwords must be 6 to 128 characters long, include a lowercase or uppercase letter, and at least one number."
	},
	"email": { //nodemailer.createTransport options should be used in nodemailerConfig. 
	    "nodemailerConfig": {
		    "host": "smtp.example.com",
		    "port": 465,
		    "secure": true, // secure:true for port 465, secure:false for port 587
		    "auth": {
		        "user": "username@example.com",
		        "pass": "userpass"
		    }
		  },
	    "defaults": {
	    	"fromName": "Passport",
	    	"fromEmail": null  //only if username is not the email
	    }	
	} 

}